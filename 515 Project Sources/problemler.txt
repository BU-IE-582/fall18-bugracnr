Problem 1:
Cycle Cancelling:
GNode nodes[6];
	int d[6] = { 0, 100000, 100000,  100000,  100000 ,  100000 };
	bool labels[6] = { 0 ,0,0,0,0,1};
	int from[7] = { 0,1,1,2,2,3,4};
	int to[7] = { 1,2,3,3,4,4,5};
	int cost[7] = {0,2,2,1,3,1,0};
	int capacity[7] = { 4,4,2,2,3,5,4};
	int arc_no = 7,
		res_arc_no,
		node_no = 6,
		last_node;
	res_arc_no = arc_no * 2;
	last_node = node_no - 1;
	Arc arcs[7], res_arcs[14];
	
SSP:
	GNode nodes[4];
	
	int b[4] = { 4,0,0,-4},
		from[5] = { 0,0,1,1,2},
		to[5] = { 1,2,2,3,3,},
		cap[5] = { 4,2,2,3,5 },
		cost[5] = { 2,2,1,3,1},
		arc_no = 5,
		res_arc_no,
		node_no = 4,
		last_node;
	res_arc_no = arc_no * 2;
	last_node = node_no - 1;

	Arc arcs[5], res_arcs[10];
	
Problem 2:
Cycle Cancelling:
GNode nodes[8];
	int d[8] = { 0, 100000, 100000,  100000,  100000,  100000, 100000 , 100000 };
	bool labels[8] = { 0 ,0,0,0,0,0,0,1};

	Arc arcs[14], res_arcs[28];
	
	int from[14]		= { 0,0,1,1,2,2,2,3,3,4,4,5,5,6 };
	int to[14]		=	{ 1,2,2,3,3,4,5,4,5,5,6,6,7,7 };
	int capacity[14] = { 5,3,10,6,3,1,7,6,5,3,1,8,2,6 };
	int cost[14]		= { 0,0,4,3,4,2,5,1,1,1,1,2,0,0 };
	int arc_no = 14,
		res_arc_no = 28,
		node_no = 8,
		last_node = 7;

SSP:
	GNode nodes[6];
	
	int b[6] = { 5,3,0,0,-2,-6 },
		from[10] = { 0,0,1,1,1,2,2,3,3,4 },
		to[10] = { 1,2,2,3,4,3,4,4,5,5 },
		cap[10] = { 10,6,3,1,7,6,5,3,1,8 },
		cost[10] = { 4,3,4,2,5,1,1,1,1,2 },
		arc_no = 10,
		res_arc_no = 20,
		node_no = 6,
		last_node = 5;
	res_arc_no = arc_no * 2;
	last_node = node_no - 1;

	Arc arcs[10], res_arcs[20];
	
Problem 3:
Cycle Cancelling:
GNode nodes[49];
	int d[49] = { 0,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000 };
	bool labels[49] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};

	Arc arcs[56], res_arcs[112];
	
	int from[56]		= {2,2,3,3,3,4,5,7,7,8,8,8,9,10,12,12,13,13,13,14,15,17,17,18,18,18,19,20,22,22,23,23,23,24,25,27,27,28,28,28,29,30,1,1,1,1,1,1,6,11,16,21,26,31,0,47  };
	int to[56]		=	{ 13,9,9,10,21,16,11,18,14,14,15,26,21,16,23,19,19,20,31,26,21,28,24,24,25,36,31,26,33,29,29,30,41,36,31,38,34,34,35,46,41,36,2,7,12,17,22,27,47,47,47,47,47,47,1,48};
	int capacity[56] = { 10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,40,40 };
	int cost[56]		= { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,20,40,80,160,0,0 };
	int arc_no = 56,
		res_arc_no,
		node_no = 49,
		last_node;
res_arc_no = arc_no * 2;
last_node = node_no - 1;
		

SSP:
	GNode nodes[47];
	
	int b[47] = { 150,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-150 },
		from[54] = { 1,1,2,2,2,3,4,6,6,7,7,7,8,9,11,11,12,12,12,13,14,16,16,17,17,17,18,19,21,21,22,22,22,23,24,26,26,27,27,27,28,29,0,0,0,0,0,0,5,10,15,20,25,30 },
		to[54] = { 12,8,8,9,20,15,10,17,13,13,14,25,20,15,22,18,18,19,30,25,20,27,23,23,24,35,30,25,32,28,28,29,40,35,30,37,33,33,34,45,40,35,1,6,11,16,21,26,46,46,46,46,46,46 },
		cap[54] = { 10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000},
		cost[54] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,20,40,80,160 },
		arc_no = 54,
		res_arc_no,
		node_no = 47,
		last_node;
	res_arc_no = arc_no * 2;
	last_node = node_no - 1;

	Arc arcs[54], res_arcs[108];
	
	
Problem 4:
Cycle Cancelling:
GNode nodes[104];
	int d[104] = {};
	bool labels[104] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};

	Arc arcs[154], res_arcs[308];
	
	int from[154]		= { 2,2,3,3,3,4,5,7,7,8,8,8,9,10,12,12,13,13,13,14,15,17,17,18,18,18,19,20,22,22,23,23,23,24,25,27,27,28,28,28,29,30,32,32,33,33,33,34,35,37,37,38,38,38,39,40,42,42,43,43,43,44,45,47,47,48,48,48,49,50,52,52,53,53,53,54,55,57,57,58,58,58,59,60,62,62,63,63,63,64,65,67,67,68,68,68,69,70,72,72,73,73,73,74,75,77,77,78,78,78,79,80,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,11,16,21,26,31,36,41,46,51,56,61,66,71,76,81,86,91,96,101,0,102 };
	int to[154]		=	{ 13,9,9,10,21,16,11,18,14,14,15,26,21,16,23,19,19,20,31,26,21,28,24,24,25,36,31,26,33,29,29,30,41,36,31,38,34,34,35,46,41,36,43,39,39,40,51,46,41,48,44,44,45,56,51,46,53,49,49,50,61,56,51,58,54,54,55,66,61,56,63,59,59,60,71,66,61,68,64,64,65,76,71,66,73,69,69,70,81,76,71,78,74,74,75,86,81,76,83,79,79,80,91,86,81,88,84,84,85,96,91,86,2,7,12,17,22,27,32,37,42,47,52,57,62,67,72,77,82,87,92,97,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,1,103};
	int capacity[154] = { 10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,100,100 };
	int cost[154]		= { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,20,40,80,160,320,640,1280,2560,5120,10240,20480,40960,81920,163840,327680,655360,1310720,2621440,0,0 };
	int arc_no = 154,
		res_arc_no ,
		node_no = 104,
		last_node ;
	res_arc_no = arc_no * 2;
	last_node = node_no - 1;

SSP:
	GNode nodes[102];
	
	int b[102] = { 100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-100 },
		from[152] = { 1,1,2,2,2,3,4,6,6,7,7,7,8,9,11,11,12,12,12,13,14,16,16,17,17,17,18,19,21,21,22,22,22,23,24,26,26,27,27,27,28,29,31,31,32,32,32,33,34,36,36,37,37,37,38,39,41,41,42,42,42,43,44,46,46,47,47,47,48,49,51,51,52,52,52,53,54,56,56,57,57,57,58,59,61,61,62,62,62,63,64,66,66,67,67,67,68,69,71,71,72,72,72,73,74,76,76,77,77,77,78,79,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100},
		to[152] = { 12,8,8,9,20,15,10,17,13,13,14,25,20,15,22,18,18,19,30,25,20,27,23,23,24,35,30,25,32,28,28,29,40,35,30,37,33,33,34,45,40,35,42,38,38,39,50,45,40,47,43,43,44,55,50,45,52,48,48,49,60,55,50,57,53,53,54,65,60,55,62,58,58,59,70,65,60,67,63,63,64,75,70,65,72,68,68,69,80,75,70,77,73,73,74,85,80,75,82,78,78,79,90,85,80,87,83,83,84,95,90,85,1,6,11,16,21,26,31,36,41,46,51,56,61,66,71,76,81,86,91,96,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101 },
		cap[152] = { 10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10,20,5,15,5,8,12,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000 },
		cost[152] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,20,40,80,160,320,640,1280,2560,5120,10240,20480,40960,81920,163840,327680,655360,1310720,2621440 },
		arc_no = 152,
		res_arc_no ,
		node_no = 102,
		last_node;
	res_arc_no = arc_no * 2;
	last_node = node_no - 1;

	Arc arcs[152], res_arcs[304];
	
Problem 5:
Cycle Cancelling:
GNode nodes[204];
	int d[204] = {};
	bool labels[204] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};

	Arc arcs[306], res_arcs[306];
	
	int from[306]		= { 2,2,3,3,3,4,5,7,7,8,8,8,9,10,12,12,13,13,13,14,15,17,17,18,18,18,19,20,22,22,23,23,23,24,25,27,27,28,28,28,29,30,32,32,33,33,33,34,35,37,37,38,38,38,39,40,42,42,43,43,43,44,45,47,47,48,48,48,49,50,52,52,53,53,53,54,55,57,57,58,58,58,59,60,62,62,63,63,63,64,65,67,67,68,68,68,69,70,72,72,73,73,73,74,75,77,77,78,78,78,79,80,82,82,83,83,83,84,85,87,87,88,88,88,89,90,92,92,93,93,93,94,95,97,97,98,98,98,99,100,102,102,103,103,103,104,105,107,107,108,108,108,109,110,112,112,113,113,113,114,115,117,117,118,118,118,119,120,122,122,123,123,123,124,125,127,127,128,128,128,129,130,132,132,133,133,133,134,135,137,137,138,138,138,139,140,142,142,143,143,143,144,145,147,147,148,148,148,149,150,152,152,153,153,153,154,155,157,157,158,158,158,159,160,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,11,16,21,26,31,36,41,46,51,56,61,66,71,76,81,86,91,96,101,106,111,116,121,126,131,136,141,146,151,156,161,166,171,176,181,186,191,196,201,0,202 };
	int to[306]		=	{ 13,9,9,10,21,16,11,18,14,14,15,26,21,16,23,19,19,20,31,26,21,28,24,24,25,36,31,26,33,29,29,30,41,36,31,38,34,34,35,46,41,36,43,39,39,40,51,46,41,48,44,44,45,56,51,46,53,49,49,50,61,56,51,58,54,54,55,66,61,56,63,59,59,60,71,66,61,68,64,64,65,76,71,66,73,69,69,70,81,76,71,78,74,74,75,86,81,76,83,79,79,80,91,86,81,88,84,84,85,96,91,86,88,89,89,90,91,91,91,93,94,94,95,96,96,96,98,99,99,100,101,101,101,103,104,104,105,106,106,106,108,109,109,110,111,111,111,113,114,114,115,116,116,116,118,119,119,120,121,121,121,123,124,124,125,126,126,126,128,129,129,130,131,131,131,133,134,134,135,136,136,136,138,139,139,140,141,141,141,143,144,144,145,146,146,146,148,149,149,150,151,151,151,153,154,154,155,156,156,156,158,159,159,160,161,161,161,163,164,164,165,166,166,166,2,7,12,17,22,27,32,37,42,47,52,57,62,67,72,77,82,87,92,97,102,107,112,117,122,127,132,137,142,147,152,157,162,167,172,177,182,187,192,197,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,1,203 };
	int capacity[306] = {};
	int cost[306]		= { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,20,40,80,160,320,640,1280,2560,5120,10240,20480,40960,81920,163840,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,0,0};
	int arc_no = 306,
		res_arc_no = 612,
		node_no = 204,
		last_node = 203;

		
SSP:
	GNode nodes[202];
	
	int b[202] = { 100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-100 },
		from[304] = { 1,1,2,2,2,3,4,6,6,7,7,7,8,9,11,11,12,12,12,13,14,16,16,17,17,17,18,19,21,21,22,22,22,23,24,26,26,27,27,27,28,29,31,31,32,32,32,33,34,36,36,37,37,37,38,39,41,41,42,42,42,43,44,46,46,47,47,47,48,49,51,51,52,52,52,53,54,56,56,57,57,57,58,59,61,61,62,62,62,63,64,66,66,67,67,67,68,69,71,71,72,72,72,73,74,76,76,77,77,77,78,79,81,81,82,82,82,83,84,86,86,87,87,87,88,89,91,91,92,92,92,93,94,96,96,97,97,97,98,99,101,101,102,102,102,103,104,106,106,107,107,107,108,109,111,111,112,112,112,113,114,116,116,117,117,117,118,119,121,121,122,122,122,123,124,126,126,127,127,127,128,129,131,131,132,132,132,133,134,136,136,137,137,137,138,139,141,141,142,142,142,143,144,146,146,147,147,147,148,149,151,151,152,152,152,153,154,156,156,157,157,157,158,159,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160,165,170,175,180,185,190,195,200 },
		to[304] = { 12,8,8,9,20,15,10,17,13,13,14,25,20,15,22,18,18,19,30,25,20,27,23,23,24,35,30,25,32,28,28,29,40,35,30,37,33,33,34,45,40,35,42,38,38,39,50,45,40,47,43,43,44,55,50,45,52,48,48,49,60,55,50,57,53,53,54,65,60,55,62,58,58,59,70,65,60,67,63,63,64,75,70,65,72,68,68,69,80,75,70,77,73,73,74,85,80,75,82,78,78,79,90,85,80,87,83,83,84,95,90,85,87,88,88,89,90,90,90,92,93,93,94,95,95,95,97,98,98,99,100,100,100,102,103,103,104,105,105,105,107,108,108,109,110,110,110,112,113,113,114,115,115,115,117,118,118,119,120,120,120,122,123,123,124,125,125,125,127,128,128,129,130,130,130,132,133,133,134,135,135,135,137,138,138,139,140,140,140,142,143,143,144,145,145,145,147,148,148,149,150,150,150,152,153,153,154,155,155,155,157,158,158,159,160,160,160,162,163,163,164,165,165,165,1,6,11,16,21,26,31,36,41,46,51,56,61,66,71,76,81,86,91,96,101,106,111,116,121,126,131,136,141,146,151,156,161,166,171,176,181,186,191,196,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201 },
		cap[304] = {},
		cost[304] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,20,40,80,160,320,640,1280,2560,5120,10240,20480,40960,81920,163840,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680,327680 },
		arc_no = 304,
		res_arc_no = 608,
		node_no = 202,
		last_node = 201;
	res_arc_no = arc_no * 2;
	last_node = node_no - 1;

	Arc arcs[304], res_arcs[608];